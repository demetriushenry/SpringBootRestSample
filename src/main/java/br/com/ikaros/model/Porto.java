package br.com.ikaros.model;
// Generated Sep 5, 2017 1:14:19 PM by Hibernate Tools 5.1.4.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Porto generated by hbm2java
 */
@Entity
@Table(name = "porto", catalog = "fluvialpass")
public class Porto implements java.io.Serializable {

	private Integer idPorto;
	private Cidade cidade;
	private String nomePorto;
	private Set<Endereco> enderecos = new HashSet<Endereco>(0);
	private Set<UsuarioGuiche> usuarioGuiches = new HashSet<UsuarioGuiche>(0);
	private Set<Destino> destinos = new HashSet<Destino>(0);
	private Set<Barco> barcos = new HashSet<Barco>(0);

	public Porto() {
	}

	public Porto(Cidade cidade) {
		this.cidade = cidade;
	}

	public Porto(Cidade cidade, String nomePorto, Set<Endereco> enderecos, Set<UsuarioGuiche> usuarioGuiches,
			Set<Destino> destinos, Set<Barco> barcos) {
		this.cidade = cidade;
		this.nomePorto = nomePorto;
		this.enderecos = enderecos;
		this.usuarioGuiches = usuarioGuiches;
		this.destinos = destinos;
		this.barcos = barcos;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "idPorto", unique = true, nullable = false)
	public Integer getIdPorto() {
		return this.idPorto;
	}

	public void setIdPorto(Integer idPorto) {
		this.idPorto = idPorto;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idCidade", nullable = false)
	public Cidade getCidade() {
		return this.cidade;
	}

	public void setCidade(Cidade cidade) {
		this.cidade = cidade;
	}

	@Column(name = "nomePorto", length = 256)
	public String getNomePorto() {
		return this.nomePorto;
	}

	public void setNomePorto(String nomePorto) {
		this.nomePorto = nomePorto;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "porto")
	public Set<Endereco> getEnderecos() {
		return this.enderecos;
	}

	public void setEnderecos(Set<Endereco> enderecos) {
		this.enderecos = enderecos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "porto")
	public Set<UsuarioGuiche> getUsuarioGuiches() {
		return this.usuarioGuiches;
	}

	public void setUsuarioGuiches(Set<UsuarioGuiche> usuarioGuiches) {
		this.usuarioGuiches = usuarioGuiches;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "porto")
	public Set<Destino> getDestinos() {
		return this.destinos;
	}

	public void setDestinos(Set<Destino> destinos) {
		this.destinos = destinos;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "porto_barco", catalog = "fluvialpass", joinColumns = {
			@JoinColumn(name = "porto_idPorto", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "barco_idBarco", nullable = false, updatable = false) })
	public Set<Barco> getBarcos() {
		return this.barcos;
	}

	public void setBarcos(Set<Barco> barcos) {
		this.barcos = barcos;
	}

}
