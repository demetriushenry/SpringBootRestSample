package br.com.ikaros.model;
// Generated Sep 5, 2017 1:14:19 PM by Hibernate Tools 5.1.4.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Barco generated by hbm2java
 */
@Entity
@Table(name = "barco", catalog = "fluvialpass")
public class Barco implements java.io.Serializable {

	private Integer idBarco;
	private Balsa balsa;
	private Destino destino;
	private TipoBarco tipoBarco;
	private String nomeBarco;
	private String telefone;
	private Integer capacidadeLotacao;
	private String logomarcaBarco;
	private String fotoBarco;
	private Set<Passagem> passagems = new HashSet<Passagem>(0);
	private Set<Porto> portos = new HashSet<Porto>(0);
	private Set<Viagem> viagems = new HashSet<Viagem>(0);
	private Set<Telefone> telefones = new HashSet<Telefone>(0);
	private Set<UsuarioVendedorPassagem> usuarioVendedorPassagems = new HashSet<UsuarioVendedorPassagem>(0);

	public Barco() {
	}

	public Barco(Balsa balsa, Destino destino, TipoBarco tipoBarco) {
		this.balsa = balsa;
		this.destino = destino;
		this.tipoBarco = tipoBarco;
	}

	public Barco(Balsa balsa, Destino destino, TipoBarco tipoBarco, String nomeBarco, String telefone,
			Integer capacidadeLotacao, String logomarcaBarco, String fotoBarco, Set<Passagem> passagems,
			Set<Porto> portos, Set<Viagem> viagems, Set<Telefone> telefones,
			Set<UsuarioVendedorPassagem> usuarioVendedorPassagems) {
		this.balsa = balsa;
		this.destino = destino;
		this.tipoBarco = tipoBarco;
		this.nomeBarco = nomeBarco;
		this.telefone = telefone;
		this.capacidadeLotacao = capacidadeLotacao;
		this.logomarcaBarco = logomarcaBarco;
		this.fotoBarco = fotoBarco;
		this.passagems = passagems;
		this.portos = portos;
		this.viagems = viagems;
		this.telefones = telefones;
		this.usuarioVendedorPassagems = usuarioVendedorPassagems;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "idBarco", unique = true, nullable = false)
	public Integer getIdBarco() {
		return this.idBarco;
	}

	public void setIdBarco(Integer idBarco) {
		this.idBarco = idBarco;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "balsa_idbalsa", nullable = false)
	public Balsa getBalsa() {
		return this.balsa;
	}

	public void setBalsa(Balsa balsa) {
		this.balsa = balsa;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idDestino", nullable = false)
	public Destino getDestino() {
		return this.destino;
	}

	public void setDestino(Destino destino) {
		this.destino = destino;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idTipoBarco", nullable = false)
	public TipoBarco getTipoBarco() {
		return this.tipoBarco;
	}

	public void setTipoBarco(TipoBarco tipoBarco) {
		this.tipoBarco = tipoBarco;
	}

	@Column(name = "nomeBarco", length = 256)
	public String getNomeBarco() {
		return this.nomeBarco;
	}

	public void setNomeBarco(String nomeBarco) {
		this.nomeBarco = nomeBarco;
	}

	@Column(name = "telefone", length = 45)
	public String getTelefone() {
		return this.telefone;
	}

	public void setTelefone(String telefone) {
		this.telefone = telefone;
	}

	@Column(name = "capacidadeLotacao")
	public Integer getCapacidadeLotacao() {
		return this.capacidadeLotacao;
	}

	public void setCapacidadeLotacao(Integer capacidadeLotacao) {
		this.capacidadeLotacao = capacidadeLotacao;
	}

	@Column(name = "logomarcaBarco", length = 200)
	public String getLogomarcaBarco() {
		return this.logomarcaBarco;
	}

	public void setLogomarcaBarco(String logomarcaBarco) {
		this.logomarcaBarco = logomarcaBarco;
	}

	@Column(name = "fotoBarco", length = 200)
	public String getFotoBarco() {
		return this.fotoBarco;
	}

	public void setFotoBarco(String fotoBarco) {
		this.fotoBarco = fotoBarco;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "barco")
	public Set<Passagem> getPassagems() {
		return this.passagems;
	}

	public void setPassagems(Set<Passagem> passagems) {
		this.passagems = passagems;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "porto_barco", catalog = "fluvialpass", joinColumns = {
			@JoinColumn(name = "barco_idBarco", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "porto_idPorto", nullable = false, updatable = false) })
	public Set<Porto> getPortos() {
		return this.portos;
	}

	public void setPortos(Set<Porto> portos) {
		this.portos = portos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "barco")
	public Set<Viagem> getViagems() {
		return this.viagems;
	}

	public void setViagems(Set<Viagem> viagems) {
		this.viagems = viagems;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "barco")
	public Set<Telefone> getTelefones() {
		return this.telefones;
	}

	public void setTelefones(Set<Telefone> telefones) {
		this.telefones = telefones;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "barco")
	public Set<UsuarioVendedorPassagem> getUsuarioVendedorPassagems() {
		return this.usuarioVendedorPassagems;
	}

	public void setUsuarioVendedorPassagems(Set<UsuarioVendedorPassagem> usuarioVendedorPassagems) {
		this.usuarioVendedorPassagems = usuarioVendedorPassagems;
	}

}
