package br.com.ikaros.model;
// Generated Sep 5, 2017 1:14:19 PM by Hibernate Tools 5.1.4.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * Cidade generated by hbm2java
 */
@Entity
@Table(name = "cidade", catalog = "fluvialpass")
public class Cidade implements java.io.Serializable {

	private Integer idCidade;
	private Estado estado;
	private String nomeCidade;
	private String siglaCidade;
	private Set<Destino> destinos = new HashSet<Destino>(0);
	private Set<Bairro> bairros = new HashSet<Bairro>(0);
	private Set<Porto> portos = new HashSet<Porto>(0);
	private Set<Itinerario> itinerarios = new HashSet<Itinerario>(0);
	private Set<Balsa> balsas = new HashSet<Balsa>(0);

	public Cidade() {
	}

	public Cidade(Estado estado, String nomeCidade, String siglaCidade) {
		this.estado = estado;
		this.nomeCidade = nomeCidade;
		this.siglaCidade = siglaCidade;
	}

	public Cidade(Estado estado, String nomeCidade, String siglaCidade, Set<Destino> destinos, Set<Bairro> bairros,
			Set<Porto> portos, Set<Itinerario> itinerarios, Set<Balsa> balsas) {
		this.estado = estado;
		this.nomeCidade = nomeCidade;
		this.siglaCidade = siglaCidade;
		this.destinos = destinos;
		this.bairros = bairros;
		this.portos = portos;
		this.itinerarios = itinerarios;
		this.balsas = balsas;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "idCidade", unique = true, nullable = false)
	public Integer getIdCidade() {
		return this.idCidade;
	}

	public void setIdCidade(Integer idCidade) {
		this.idCidade = idCidade;
	}

	@JsonIgnore
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idEstado", nullable = false)
	public Estado getEstado() {
		return this.estado;
	}

	public void setEstado(Estado estado) {
		this.estado = estado;
	}

	@Column(name = "nomeCidade", length = 256)
	public String getNomeCidade() {
		return this.nomeCidade;
	}

	public void setNomeCidade(String nomeCidade) {
		this.nomeCidade = nomeCidade;
	}

	@Column(name = "siglaCidade", length = 45)
	public String getSiglaCidade() {
		return this.siglaCidade;
	}

	public void setSiglaCidade(String siglaCidade) {
		this.siglaCidade = siglaCidade;
	}

	@JsonIgnore
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "cidade")
	public Set<Destino> getDestinos() {
		return this.destinos;
	}

	public void setDestinos(Set<Destino> destinos) {
		this.destinos = destinos;
	}

	@JsonIgnore
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "cidade")
	public Set<Bairro> getBairros() {
		return this.bairros;
	}

	public void setBairros(Set<Bairro> bairros) {
		this.bairros = bairros;
	}

	@JsonIgnore
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "cidade")
	public Set<Porto> getPortos() {
		return this.portos;
	}

	public void setPortos(Set<Porto> portos) {
		this.portos = portos;
	}

	@JsonIgnore
	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "cidade_has_itinerario", catalog = "fluvialpass", joinColumns = {
			@JoinColumn(name = "idCidade", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "idItinerario", nullable = false, updatable = false) })
	public Set<Itinerario> getItinerarios() {
		return this.itinerarios;
	}

	public void setItinerarios(Set<Itinerario> itinerarios) {
		this.itinerarios = itinerarios;
	}

	@JsonIgnore
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "cidade")
	public Set<Balsa> getBalsas() {
		return this.balsas;
	}

	public void setBalsas(Set<Balsa> balsas) {
		this.balsas = balsas;
	}

}
