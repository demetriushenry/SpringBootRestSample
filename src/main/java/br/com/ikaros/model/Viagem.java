package br.com.ikaros.model;
// Generated Sep 5, 2017 1:14:19 PM by Hibernate Tools 5.1.4.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Viagem generated by hbm2java
 */
@Entity
@Table(name = "viagem", catalog = "fluvialpass")
public class Viagem implements java.io.Serializable {

	private Integer idViagem;
	private Barco barco;
	private Itinerario itinerario;
	private Date dataSaida;
	private Date dataChegada;
	private String horaSaida;
	private String horaChegada;
	private Integer passagensDisponiveis;
	private Set<Passagem> passagems = new HashSet<Passagem>(0);

	public Viagem() {
	}

	public Viagem(Barco barco, Itinerario itinerario) {
		this.barco = barco;
		this.itinerario = itinerario;
	}

	public Viagem(Barco barco, Itinerario itinerario, Date dataSaida, Date dataChegada, String horaSaida,
			String horaChegada, Integer passagensDisponiveis, Set<Passagem> passagems) {
		this.barco = barco;
		this.itinerario = itinerario;
		this.dataSaida = dataSaida;
		this.dataChegada = dataChegada;
		this.horaSaida = horaSaida;
		this.horaChegada = horaChegada;
		this.passagensDisponiveis = passagensDisponiveis;
		this.passagems = passagems;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "idViagem", unique = true, nullable = false)
	public Integer getIdViagem() {
		return this.idViagem;
	}

	public void setIdViagem(Integer idViagem) {
		this.idViagem = idViagem;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idBarco", nullable = false)
	public Barco getBarco() {
		return this.barco;
	}

	public void setBarco(Barco barco) {
		this.barco = barco;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idItinerario", nullable = false)
	public Itinerario getItinerario() {
		return this.itinerario;
	}

	public void setItinerario(Itinerario itinerario) {
		this.itinerario = itinerario;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "dataSaida", length = 10)
	public Date getDataSaida() {
		return this.dataSaida;
	}

	public void setDataSaida(Date dataSaida) {
		this.dataSaida = dataSaida;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "dataChegada", length = 10)
	public Date getDataChegada() {
		return this.dataChegada;
	}

	public void setDataChegada(Date dataChegada) {
		this.dataChegada = dataChegada;
	}

	@Column(name = "horaSaida", length = 45)
	public String getHoraSaida() {
		return this.horaSaida;
	}

	public void setHoraSaida(String horaSaida) {
		this.horaSaida = horaSaida;
	}

	@Column(name = "horaChegada", length = 45)
	public String getHoraChegada() {
		return this.horaChegada;
	}

	public void setHoraChegada(String horaChegada) {
		this.horaChegada = horaChegada;
	}

	@Column(name = "passagensDisponiveis")
	public Integer getPassagensDisponiveis() {
		return this.passagensDisponiveis;
	}

	public void setPassagensDisponiveis(Integer passagensDisponiveis) {
		this.passagensDisponiveis = passagensDisponiveis;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "viagem")
	public Set<Passagem> getPassagems() {
		return this.passagems;
	}

	public void setPassagems(Set<Passagem> passagems) {
		this.passagems = passagems;
	}

}
